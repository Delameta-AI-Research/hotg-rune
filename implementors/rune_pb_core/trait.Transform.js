(function() {var implementors = {};
implementors["fft"] = [{"text":"impl <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"fft/struct.ShortTimeFourierTransform.html\" title=\"struct fft::ShortTimeFourierTransform\">ShortTimeFourierTransform</a>","synthetic":false,"types":["fft::ShortTimeFourierTransform"]}];
implementors["image_normalization"] = [{"text":"impl <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"image_normalization/struct.ImageNormalization.html\" title=\"struct image_normalization::ImageNormalization\">ImageNormalization</a>","synthetic":false,"types":["image_normalization::ImageNormalization"]},{"text":"impl <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html\">f32</a>&gt;&gt; for <a class=\"struct\" href=\"image_normalization/struct.ImageNormalization.html\" title=\"struct image_normalization::ImageNormalization\">ImageNormalization</a>","synthetic":false,"types":["image_normalization::ImageNormalization"]}];
implementors["label"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"label/struct.Label.html\" title=\"struct label::Label\">Label</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\">TryInto</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html#associatedtype.Error\" title=\"type core::convert::TryInto::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["label::Label"]}];
implementors["modulo"] = [{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"modulo/struct.Modulo.html\" title=\"struct modulo::Modulo\">Modulo</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a> + <a class=\"trait\" href=\"num_traits/cast/trait.FromPrimitive.html\" title=\"trait num_traits::cast::FromPrimitive\">FromPrimitive</a>,&nbsp;</span>","synthetic":false,"types":["modulo::Modulo"]}];
implementors["most_confident_indices"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"most_confident_indices/struct.MostConfidentIndices.html\" title=\"struct most_confident_indices::MostConfidentIndices\">MostConfidentIndices</a>","synthetic":false,"types":["most_confident_indices::MostConfidentIndices"]}];
implementors["noise_filtering"] = [{"text":"impl <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"noise_filtering/struct.NoiseFiltering.html\" title=\"struct noise_filtering::NoiseFiltering\">NoiseFiltering</a>","synthetic":false,"types":["noise_filtering::NoiseFiltering"]}];
implementors["normalize"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"struct\" href=\"runic_types/tensor/struct.Tensor.html\" title=\"struct runic_types::tensor::Tensor\">Tensor</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"normalize/struct.Normalize.html\" title=\"struct normalize::Normalize\">Normalize</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,&nbsp;</span>","synthetic":false,"types":["normalize::Normalize"]},{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"rune_pb_core/trait.Transform.html\" title=\"trait rune_pb_core::Transform\">Transform</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[</a>T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">; N]</a>&gt; for <a class=\"struct\" href=\"normalize/struct.Normalize.html\" title=\"struct normalize::Normalize\">Normalize</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,&nbsp;</span>","synthetic":false,"types":["normalize::Normalize"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
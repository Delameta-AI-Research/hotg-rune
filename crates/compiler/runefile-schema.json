{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Document",
  "type": "object",
  "allOf": [
    {
      "if": {
        "type": "object",
        "properties": {
          "version": {
            "const": 1
          }
        }
      },
      "then": {
        "$ref": "#/definitions/DocumentV1"
      }
    },
    {
      "type": "object",
      "properties": {
        "version": {
          "enum": [
            1
          ]
        }
      }
    }
  ],
  "required": [
    "version"
  ],
  "definitions": {
    "CapabilityStage": {
      "type": "object",
      "required": [
        "capability"
      ],
      "properties": {
        "args": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/kebab-case"
          }
        },
        "capability": {
          "type": "string"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        }
      }
    },
    "DocumentV1": {
      "description": "Version 1 of the `Runefile.yml` format.",
      "type": "object",
      "required": [
        "image",
        "pipeline"
      ],
      "properties": {
        "image": {
          "$ref": "#/definitions/Path"
        },
        "pipeline": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Stage"
          }
        },
        "resources": {
          "default": {},
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceDeclaration"
          }
        }
      }
    },
    "Input": {
      "type": "string",
      "format": "string",
      "pattern": "^(?P<name>[a-zA-Z_][\\w-]*)(?:\\.(?P<index>\\d+))?$"
    },
    "ModelStage": {
      "type": "object",
      "required": [
        "model"
      ],
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Input"
          }
        },
        "model": {
          "$ref": "#/definitions/ResourceOrString"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        }
      }
    },
    "OutStage": {
      "type": "object",
      "required": [
        "out"
      ],
      "properties": {
        "args": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/kebab-case"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Input"
          }
        },
        "out": {
          "type": "string"
        }
      }
    },
    "Path": {
      "type": "string",
      "format": "string",
      "pattern": "(?x)\n        (?P<base>[\\w\\d:/_.-]+)\n        (?:@(?P<version>[\\w\\d./-]+))?\n        (?:\\#(?P<sub_path>[\\w\\d._/-]+))?\n        "
    },
    "ProcBlockStage": {
      "type": "object",
      "required": [
        "proc-block"
      ],
      "properties": {
        "args": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/kebab-case"
          }
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Input"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type"
          }
        },
        "proc-block": {
          "$ref": "#/definitions/Path"
        }
      }
    },
    "ResourceDeclaration": {
      "description": "The declaration for a resource, typically something like a wordlist or environment variable.",
      "type": "object",
      "properties": {
        "inline": {
          "description": "A resource who's default value is specified inline.",
          "type": [
            "string",
            "null"
          ]
        },
        "path": {
          "description": "A resource who's default value is meant to be loaded from a file.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {
          "default": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ResourceType"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ResourceName": {
      "type": "string",
      "format": "string",
      "pattern": "^\\$[_a-zA-Z][_a-zA-Z0-9]*$"
    },
    "ResourceOrString": {
      "description": "Something that could be either a reference to a resource (`$resource`) or a plain string (`./path`).",
      "anyOf": [
        {
          "$ref": "#/definitions/ResourceName"
        },
        {
          "type": "string"
        }
      ]
    },
    "ResourceType": {
      "description": "How the resource should be treated inside the Rune.",
      "type": "string",
      "enum": [
        "string",
        "binary"
      ]
    },
    "Stage": {
      "type": "object",
      "allOf": [
        {
          "if": {
            "type": "object",
            "required": [
              "model"
            ]
          },
          "then": {
            "$ref": "#/definitions/ModelStage"
          }
        },
        {
          "if": {
            "type": "object",
            "required": [
              "proc-block"
            ]
          },
          "then": {
            "$ref": "#/definitions/ProcBlockStage"
          }
        },
        {
          "if": {
            "type": "object",
            "required": [
              "capability"
            ]
          },
          "then": {
            "$ref": "#/definitions/CapabilityStage"
          }
        },
        {
          "if": {
            "type": "object",
            "required": [
              "out"
            ]
          },
          "then": {
            "$ref": "#/definitions/OutStage"
          }
        }
      ],
      "oneOf": [
        {
          "type": "object",
          "required": [
            "model"
          ]
        },
        {
          "type": "object",
          "required": [
            "proc-block"
          ]
        },
        {
          "type": "object",
          "required": [
            "capability"
          ]
        },
        {
          "type": "object",
          "required": [
            "out"
          ]
        }
      ]
    },
    "Type": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "dimensions": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "kebab-case": {
      "anyOf": [
        {
          "type": "integer",
          "format": "int32"
        },
        {
          "type": "number",
          "format": "float"
        },
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/kebab-case"
          }
        }
      ]
    }
  }
}

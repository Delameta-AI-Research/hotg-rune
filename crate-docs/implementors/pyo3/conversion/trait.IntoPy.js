(function() {var implementors = {};
implementors["numpy"] = [{"text":"impl&lt;T, D&gt; <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPy.html\" title=\"trait pyo3::conversion::IntoPy\">IntoPy</a>&lt;<a class=\"struct\" href=\"pyo3/instance/struct.Py.html\" title=\"struct pyo3::instance::Py\">Py</a>&lt;<a class=\"struct\" href=\"numpy/array/struct.PyArray.html\" title=\"struct numpy::array::PyArray\">PyArray</a>&lt;T, D&gt;&gt;&gt; for &amp;<a class=\"struct\" href=\"numpy/array/struct.PyArray.html\" title=\"struct numpy::array::PyArray\">PyArray</a>&lt;T, D&gt;","synthetic":false,"types":["numpy::array::PyArray"]},{"text":"impl&lt;T, D&gt; <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPy.html\" title=\"trait pyo3::conversion::IntoPy\">IntoPy</a>&lt;<a class=\"struct\" href=\"pyo3/instance/struct.Py.html\" title=\"struct pyo3::instance::Py\">Py</a>&lt;<a class=\"struct\" href=\"pyo3/types/any/struct.PyAny.html\" title=\"struct pyo3::types::any::PyAny\">PyAny</a>&gt;&gt; for <a class=\"struct\" href=\"numpy/array/struct.PyArray.html\" title=\"struct numpy::array::PyArray\">PyArray</a>&lt;T, D&gt;","synthetic":false,"types":["numpy::array::PyArray"]},{"text":"impl <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPy.html\" title=\"trait pyo3::conversion::IntoPy\">IntoPy</a>&lt;<a class=\"struct\" href=\"pyo3/instance/struct.Py.html\" title=\"struct pyo3::instance::Py\">Py</a>&lt;<a class=\"struct\" href=\"numpy/struct.PyArrayDescr.html\" title=\"struct numpy::PyArrayDescr\">PyArrayDescr</a>&gt;&gt; for &amp;<a class=\"struct\" href=\"numpy/struct.PyArrayDescr.html\" title=\"struct numpy::PyArrayDescr\">PyArrayDescr</a>","synthetic":false,"types":["numpy::dtype::PyArrayDescr"]},{"text":"impl&lt;'py, T, D&gt; <a class=\"trait\" href=\"pyo3/conversion/trait.IntoPy.html\" title=\"trait pyo3::conversion::IntoPy\">IntoPy</a>&lt;<a class=\"struct\" href=\"pyo3/instance/struct.Py.html\" title=\"struct pyo3::instance::Py\">Py</a>&lt;<a class=\"struct\" href=\"pyo3/types/any/struct.PyAny.html\" title=\"struct pyo3::types::any::PyAny\">PyAny</a>&gt;&gt; for <a class=\"struct\" href=\"numpy/struct.PyReadonlyArray.html\" title=\"struct numpy::PyReadonlyArray\">PyReadonlyArray</a>&lt;'py, T, D&gt;","synthetic":false,"types":["numpy::readonly::PyReadonlyArray"]}];
implementors["pyo3"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  check:
    name: Compile and Test
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - macos-latest
          # Note: we need to use pre-compiled TensorFlow Lite binaries on
          # Windows, so ignore the Windows build for now
          #- windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            python/target
          key: ${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rustup
        run: |
          # We need to update rustup because the mac version is out of date and
          # self-update is disabled. https://github.com/rust-lang/rustup/issues/2766
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none -y
        if: runner.os == 'macOS'
      - uses: maxim-lobanov/setup-xcode@v1
        if: runner.os == 'macOS'
        with:
          xcode-version: latest-stable
      - uses: actions/setup-python@v2
        if: runner.os == 'macOS'
        with:
          python-version: "3.x"
      - name: Install Build Dependencies
        run: |
          pip install numpy
      - name: Setup Rust
        run: rustup show
      - name: Type Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --verbose --locked
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --verbose --locked
      - name: Unit Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --verbose --locked
      - name: Integration Tests
        uses: actions-rs/cargo@v1
        with:
          command: integration-tests
      - name: Cargo.toml Sanity Checks
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: check-manifests
      - name: Use GNU Tar from Msys
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          rm C:\msys64\usr\bin\bash.exe

  api-docs:
    name: Generate API Docs
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Update Rustup
        run: |
          # We need to update rustup because the mac version is out of date and
          # self-update is disabled. https://github.com/rust-lang/rustup/issues/2766
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none -y
        if: runner.os == 'macOS'
      - name: Setup Rust
        run: rustup show
      - name: Generate API Docs
        id: first_try
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: doc
          args: --workspace --verbose --locked
      # Sometimes generating docs on GitHub actions will spuriously fail with
      # a random "file not found" error - possibly due to caching.
      #
      #   error: failed to remove file `/home/runner/work/rune/rune/target/doc/rune/constant.DEFAULT_RUST_LOG.html`
      #   Caused by:
      #      No such file or directory (os error 2)
      - name: Generate API Docs (second attempt)
        run: |
          cargo clean --doc
          cargo doc --workspace --verbose --locked
        if: ${{ steps.first_try.outcome == 'failure' }}
      - name: Automatically redirect to rune_runtime docs
        run: echo '<meta http-equiv="refresh" content="0; url=hotg_rune_core/index.html" />' > target/doc/index.html
      - name: Generate HTML docs from JSON Schema
        run: |
          pip3 install json-schema-for-humans
          mkdir -p target/doc/_runefile_schema/
          generate-schema-doc crates/compiler/runefile-schema.json target/doc/_runefile_schema/schema.html --copy-css --copy-js --expand-buttons
      - name: Upload API Docs
        uses: JamesIves/github-pages-deploy-action@4.1.1
        if: github.ref == 'refs/heads/master'
        with:
          branch: gh-pages
          folder: target/doc

  web-bindings:
    name: Test Web Bindings
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            bindings/web/node_modules
          key: ${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust
        run: rustup show
      - name: Install Dependencies
        run: cd bindings/web && yarn install
      - name: Run Tests
        run: cd bindings/web && yarn test

name: Continuous integration

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  check:
    name: Compile and Test
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ github.workflow }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown x86_64-unknown-linux-musl
      - name: Type Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --verbose
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --verbose
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --verbose
      - name: Generate API Docs
        run: |
          cargo doc --workspace --verbose
          echo '<meta http-equiv="refresh" content="0; url=rune_runtime/index.html" />' > target/doc/index.html
        if: github.ref == 'refs/heads/master'
      - name: Upload API Docs
        uses: JamesIves/github-pages-deploy-action@4.1.1
        if: github.ref == 'refs/heads/master'
        with:
          branch: gh-pages
          folder: target/doc

  python:
    name: Python Bindings
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ github.workflow }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Compile the Wheel
        run: |
          pip3 install maturin
          maturin build --manifest-path proc_blocks/python/Cargo.toml \
                        --bindings pyo3 \
                        --manylinux off \
                        --release
          pip3 install proc_blocks/python/target/wheels/*.whl
          python3 -c 'from proc_blocks import Normalize; n = Normalize(); print(n([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))'
      - name: Upload Wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: proc_blocks/python/target/wheels


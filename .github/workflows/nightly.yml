name: Nightly

on:
  schedule:
  - cron: '0 0 * * *' # midnight UTC
  push:
    branches:
    - master
  pull_request:

jobs:
  build:
    name: Build release artifacts for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: "target/rune.*.zip"
            asset_name: rune-linux
          # - name: windows
          #   os: windows-latest
          #   artifact_name: "target/rune.*.zip"
          #   asset_name: rune-windows
          - name: macos
            os: macos-latest
            artifact_name: "target/rune.*.zip"
            asset_name: rune-macos
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Build
        run: cargo xtask dist
        env:
          RUST_LOG: info,xtask=debug
      - name: Upload binaries to release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}

  create-release:
    name: Create Nightly Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch Pre-Compiled Binaries
        uses: actions/download-artifact@v2
        with:
          path: public

      - name: Print Artifacts
        run: ls -la public
    - name: Publish Release
      uses: ./.github/actions/github-release
      with:
        files: "public/*.zip"
        name: nightly
        token: ${{ secrets.GITHUB_TOKEN }}
